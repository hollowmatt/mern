{"id":"conditions.js","dependencies":[{"name":"/Users/mholloway/Repo/GitHub/edutainment/MERN/.babelrc","includedInParent":true,"mtime":1549210794000},{"name":"/Users/mholloway/Repo/GitHub/edutainment/MERN/package.json","includedInParent":true,"mtime":1549210890000},{"name":"react","loc":{"line":1,"column":23},"parent":"/Users/mholloway/Repo/GitHub/edutainment/MERN/conditions.js","resolved":"/Users/mholloway/Repo/GitHub/edutainment/MERN/node_modules/react/index.js"},{"name":"react-dom","loc":{"line":2,"column":26},"parent":"/Users/mholloway/Repo/GitHub/edutainment/MERN/conditions.js","resolved":"/Users/mholloway/Repo/GitHub/edutainment/MERN/node_modules/react-dom/index.js"}],"generated":{"js":"\"use strict\";\n\nvar React = _interopRequireWildcard(require(\"react\"));\n\nvar ReactDOM = _interopRequireWildcard(require(\"react-dom\"));\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { var desc = Object.defineProperty && Object.getOwnPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : {}; if (desc.get || desc.set) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } } newObj.default = obj; return newObj; } }\n\nfunction _typeof(obj) { if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") { _typeof = function _typeof(obj) { return typeof obj; }; } else { _typeof = function _typeof(obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }; } return _typeof(obj); }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _possibleConstructorReturn(self, call) { if (call && (_typeof(call) === \"object\" || typeof call === \"function\")) { return call; } return _assertThisInitialized(self); }\n\nfunction _getPrototypeOf(o) { _getPrototypeOf = Object.setPrototypeOf ? Object.getPrototypeOf : function _getPrototypeOf(o) { return o.__proto__ || Object.getPrototypeOf(o); }; return _getPrototypeOf(o); }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function\"); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, writable: true, configurable: true } }); if (superClass) _setPrototypeOf(subClass, superClass); }\n\nfunction _setPrototypeOf(o, p) { _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) { o.__proto__ = p; return o; }; return _setPrototypeOf(o, p); }\n\nfunction _assertThisInitialized(self) { if (self === void 0) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return self; }\n\nvar Toggle = function Toggle(_ref) {\n  var condition = _ref.condition,\n      children = _ref.children;\n  return condition ? children[0] : children[1];\n};\n\nvar App =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(App, _React$Component);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(App).call(this, props));\n    _this.state = {\n      color: 'blue'\n    };\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_assertThisInitialized(_this)));\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"onClick\",\n    value: function onClick() {\n      this.setState(function (_ref2) {\n        var color = _ref2.color;\n        return {\n          color: color === 'blue' ? 'lime' : 'blue'\n        };\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var color = this.state.color;\n      return React.createElement(React.Fragment, null, React.createElement(Toggle, {\n        condition: color === 'blue'\n      }, React.createElement(\"p\", {\n        style: {\n          color: color\n        }\n      }, \"Blue!\"), React.createElement(\"p\", {\n        style: {\n          color: color\n        }\n      }, \"Lime!\")), React.createElement(\"button\", {\n        onClick: this.onClick\n      }, \"Toggle Colors\"));\n    }\n  }]);\n\n  return App;\n}(React.Component);\n\nReactDOM.render(React.createElement(App, null), document.querySelector('[role=\"main\"]'));","map":{"mappings":[{"generated":{"line":3,"column":0},"source":"conditions.js","original":{"line":1,"column":0}},{"generated":{"line":5,"column":0},"source":"conditions.js","original":{"line":2,"column":0}},{"generated":{"line":27,"column":0},"source":"conditions.js","original":{"line":4,"column":0}},{"name":"Toggle","generated":{"line":27,"column":4},"source":"conditions.js","original":{"line":4,"column":6}},{"generated":{"line":27,"column":10},"source":"conditions.js","original":{"line":4,"column":12}},{"generated":{"line":27,"column":13},"source":"conditions.js","original":{"line":4,"column":15}},{"name":"Toggle","generated":{"line":27,"column":22},"source":"conditions.js","original":{"line":4,"column":6}},{"generated":{"line":27,"column":28},"source":"conditions.js","original":{"line":4,"column":15}},{"generated":{"line":28,"column":0},"source":"conditions.js","original":{"line":4,"column":15}},{"name":"condition","generated":{"line":28,"column":6},"source":"conditions.js","original":{"line":4,"column":18}},{"generated":{"line":28,"column":15},"source":"conditions.js","original":{"line":4,"column":15}},{"name":"condition","generated":{"line":28,"column":23},"source":"conditions.js","original":{"line":4,"column":18}},{"generated":{"line":28,"column":32},"source":"conditions.js","original":{"line":4,"column":15}},{"generated":{"line":29,"column":0},"source":"conditions.js","original":{"line":4,"column":15}},{"name":"children","generated":{"line":29,"column":6},"source":"conditions.js","original":{"line":4,"column":29}},{"generated":{"line":29,"column":14},"source":"conditions.js","original":{"line":4,"column":15}},{"name":"children","generated":{"line":29,"column":22},"source":"conditions.js","original":{"line":4,"column":29}},{"generated":{"line":29,"column":30},"source":"conditions.js","original":{"line":4,"column":15}},{"generated":{"line":30,"column":0},"source":"conditions.js","original":{"line":4,"column":15}},{"name":"condition","generated":{"line":30,"column":9},"source":"conditions.js","original":{"line":5,"column":1}},{"generated":{"line":30,"column":18},"source":"conditions.js","original":{"line":5,"column":10}},{"name":"children","generated":{"line":30,"column":21},"source":"conditions.js","original":{"line":5,"column":13}},{"generated":{"line":30,"column":29},"source":"conditions.js","original":{"line":5,"column":21}},{"generated":{"line":30,"column":30},"source":"conditions.js","original":{"line":5,"column":22}},{"generated":{"line":30,"column":31},"source":"conditions.js","original":{"line":5,"column":21}},{"generated":{"line":30,"column":32},"source":"conditions.js","original":{"line":5,"column":10}},{"name":"children","generated":{"line":30,"column":35},"source":"conditions.js","original":{"line":5,"column":27}},{"generated":{"line":30,"column":43},"source":"conditions.js","original":{"line":5,"column":35}},{"generated":{"line":30,"column":44},"source":"conditions.js","original":{"line":5,"column":36}},{"generated":{"line":30,"column":45},"source":"conditions.js","original":{"line":5,"column":35}},{"generated":{"line":30,"column":46},"source":"conditions.js","original":{"line":4,"column":15}},{"generated":{"line":31,"column":0},"source":"conditions.js","original":{"line":4,"column":15}},{"generated":{"line":31,"column":1},"source":"conditions.js","original":{"line":4,"column":0}},{"name":"App","generated":{"line":33,"column":4},"source":"conditions.js","original":{"line":8,"column":6}},{"generated":{"line":38,"column":0},"source":"conditions.js","original":{"line":9,"column":1}},{"name":"props","generated":{"line":38,"column":15},"source":"conditions.js","original":{"line":9,"column":13}},{"generated":{"line":38,"column":20},"source":"conditions.js","original":{"line":9,"column":1}},{"generated":{"line":38,"column":22},"source":"conditions.js","original":{"line":9,"column":20}},{"generated":{"line":39,"column":0},"source":"conditions.js","original":{"line":9,"column":20}},{"generated":{"line":41,"column":0},"source":"conditions.js","original":{"line":9,"column":20}},{"generated":{"line":43,"column":0},"source":"conditions.js","original":{"line":10,"column":2}},{"name":"props","generated":{"line":43,"column":77},"source":"conditions.js","original":{"line":10,"column":8}},{"generated":{"line":43,"column":82},"source":"conditions.js","original":{"line":10,"column":2}},{"generated":{"line":44,"column":0},"source":"conditions.js","original":{"line":11,"column":2}},{"name":"state","generated":{"line":44,"column":10},"source":"conditions.js","original":{"line":11,"column":7}},{"generated":{"line":44,"column":15},"source":"conditions.js","original":{"line":11,"column":2}},{"generated":{"line":44,"column":18},"source":"conditions.js","original":{"line":11,"column":15}},{"name":"color","generated":{"line":45,"column":0},"source":"conditions.js","original":{"line":12,"column":3}},{"name":"color","generated":{"line":45,"column":6},"source":"conditions.js","original":{"line":12,"column":3}},{"generated":{"line":45,"column":11},"source":"conditions.js","original":{"line":12,"column":8}},{"generated":{"line":45,"column":13},"source":"conditions.js","original":{"line":12,"column":10}},{"generated":{"line":46,"column":0},"source":"conditions.js","original":{"line":11,"column":15}},{"generated":{"line":46,"column":5},"source":"conditions.js","original":{"line":11,"column":2}},{"generated":{"line":47,"column":0},"source":"conditions.js","original":{"line":14,"column":2}},{"name":"onClick","generated":{"line":47,"column":10},"source":"conditions.js","original":{"line":14,"column":7}},{"generated":{"line":47,"column":17},"source":"conditions.js","original":{"line":14,"column":2}},{"generated":{"line":47,"column":20},"source":"conditions.js","original":{"line":14,"column":17}},{"name":"onClick","generated":{"line":47,"column":26},"source":"conditions.js","original":{"line":14,"column":22}},{"generated":{"line":47,"column":33},"source":"conditions.js","original":{"line":14,"column":17}},{"name":"bind","generated":{"line":47,"column":34},"source":"conditions.js","original":{"line":14,"column":30}},{"generated":{"line":47,"column":38},"source":"conditions.js","original":{"line":14,"column":17}},{"generated":{"line":47,"column":93},"source":"conditions.js","original":{"line":14,"column":2}},{"generated":{"line":48,"column":0},"source":"conditions.js","original":{"line":9,"column":20}},{"generated":{"line":49,"column":0},"source":"conditions.js","original":{"line":15,"column":2}},{"generated":{"line":53,"column":30},"source":"conditions.js","original":{"line":17,"column":11}},{"generated":{"line":54,"column":0},"source":"conditions.js","original":{"line":18,"column":2}},{"name":"setState","generated":{"line":54,"column":11},"source":"conditions.js","original":{"line":18,"column":7}},{"generated":{"line":54,"column":19},"source":"conditions.js","original":{"line":18,"column":2}},{"generated":{"line":54,"column":20},"source":"conditions.js","original":{"line":18,"column":16}},{"generated":{"line":55,"column":0},"source":"conditions.js","original":{"line":18,"column":16}},{"name":"color","generated":{"line":55,"column":12},"source":"conditions.js","original":{"line":18,"column":19}},{"generated":{"line":55,"column":17},"source":"conditions.js","original":{"line":18,"column":16}},{"name":"color","generated":{"line":55,"column":26},"source":"conditions.js","original":{"line":18,"column":19}},{"generated":{"line":55,"column":31},"source":"conditions.js","original":{"line":18,"column":16}},{"generated":{"line":56,"column":0},"source":"conditions.js","original":{"line":18,"column":16}},{"generated":{"line":56,"column":15},"source":"conditions.js","original":{"line":18,"column":32}},{"name":"color","generated":{"line":57,"column":0},"source":"conditions.js","original":{"line":19,"column":3}},{"name":"color","generated":{"line":57,"column":10},"source":"conditions.js","original":{"line":19,"column":3}},{"generated":{"line":57,"column":15},"source":"conditions.js","original":{"line":19,"column":8}},{"name":"color","generated":{"line":57,"column":17},"source":"conditions.js","original":{"line":19,"column":11}},{"generated":{"line":57,"column":22},"source":"conditions.js","original":{"line":19,"column":16}},{"generated":{"line":57,"column":27},"source":"conditions.js","original":{"line":19,"column":21}},{"generated":{"line":57,"column":33},"source":"conditions.js","original":{"line":19,"column":10}},{"generated":{"line":57,"column":36},"source":"conditions.js","original":{"line":19,"column":31}},{"generated":{"line":57,"column":42},"source":"conditions.js","original":{"line":19,"column":10}},{"generated":{"line":57,"column":45},"source":"conditions.js","original":{"line":19,"column":40}},{"generated":{"line":58,"column":0},"source":"conditions.js","original":{"line":18,"column":32}},{"generated":{"line":58,"column":9},"source":"conditions.js","original":{"line":18,"column":16}},{"generated":{"line":59,"column":0},"source":"conditions.js","original":{"line":18,"column":16}},{"generated":{"line":59,"column":7},"source":"conditions.js","original":{"line":18,"column":2}},{"generated":{"line":60,"column":0},"source":"conditions.js","original":{"line":21,"column":2}},{"generated":{"line":63,"column":29},"source":"conditions.js","original":{"line":23,"column":10}},{"generated":{"line":64,"column":0},"source":"conditions.js","original":{"line":23,"column":10}},{"name":"color","generated":{"line":64,"column":10},"source":"conditions.js","original":{"line":24,"column":10}},{"generated":{"line":64,"column":15},"source":"conditions.js","original":{"line":23,"column":10}},{"generated":{"line":64,"column":18},"source":"conditions.js","original":{"line":24,"column":20}},{"name":"state","generated":{"line":64,"column":23},"source":"conditions.js","original":{"line":24,"column":25}},{"generated":{"line":64,"column":28},"source":"conditions.js","original":{"line":23,"column":10}},{"name":"color","generated":{"line":64,"column":29},"source":"conditions.js","original":{"line":24,"column":10}},{"generated":{"line":64,"column":34},"source":"conditions.js","original":{"line":23,"column":10}},{"generated":{"line":65,"column":0},"source":"conditions.js","original":{"line":25,"column":2}},{"generated":{"line":65,"column":13},"source":"conditions.js","original":{"line":26,"column":3}},{"generated":{"line":65,"column":33},"source":"conditions.js","original":{"line":26,"column":4}},{"generated":{"line":65,"column":38},"source":"conditions.js","original":{"line":26,"column":3}},{"generated":{"line":65,"column":39},"source":"conditions.js","original":{"line":26,"column":10}},{"generated":{"line":65,"column":47},"source":"conditions.js","original":{"line":26,"column":3}},{"generated":{"line":65,"column":55},"source":"conditions.js","original":{"line":27,"column":4}},{"generated":{"line":65,"column":75},"source":"conditions.js","original":{"line":27,"column":5}},{"generated":{"line":65,"column":81},"source":"conditions.js","original":{"line":27,"column":4}},{"generated":{"line":66,"column":0},"source":"conditions.js","original":{"line":27,"column":12}},{"generated":{"line":66,"column":8},"source":"conditions.js","original":{"line":27,"column":12}},{"generated":{"line":66,"column":17},"source":"conditions.js","original":{"line":27,"column":21}},{"name":"color","generated":{"line":66,"column":19},"source":"conditions.js","original":{"line":27,"column":23}},{"generated":{"line":66,"column":24},"source":"conditions.js","original":{"line":27,"column":28}},{"generated":{"line":66,"column":29},"source":"conditions.js","original":{"line":27,"column":32}},{"generated":{"line":67,"column":0},"source":"conditions.js","original":{"line":27,"column":4}},{"generated":{"line":67,"column":9},"source":"conditions.js","original":{"line":28,"column":5}},{"generated":{"line":68,"column":0},"source":"conditions.js","original":{"line":28,"column":8}},{"generated":{"line":68,"column":8},"source":"conditions.js","original":{"line":28,"column":8}},{"generated":{"line":68,"column":13},"source":"conditions.js","original":{"line":28,"column":13}},{"generated":{"line":68,"column":15},"source":"conditions.js","original":{"line":28,"column":15}},{"name":"color","generated":{"line":69,"column":0},"source":"conditions.js","original":{"line":28,"column":17}},{"name":"color","generated":{"line":69,"column":10},"source":"conditions.js","original":{"line":28,"column":17}},{"generated":{"line":69,"column":15},"source":"conditions.js","original":{"line":28,"column":22}},{"name":"color","generated":{"line":69,"column":17},"source":"conditions.js","original":{"line":28,"column":17}},{"generated":{"line":70,"column":0},"source":"conditions.js","original":{"line":28,"column":15}},{"generated":{"line":71,"column":0},"source":"conditions.js","original":{"line":28,"column":5}},{"generated":{"line":71,"column":17},"source":"conditions.js","original":{"line":27,"column":4}},{"generated":{"line":71,"column":19},"source":"conditions.js","original":{"line":29,"column":5}},{"generated":{"line":72,"column":0},"source":"conditions.js","original":{"line":29,"column":8}},{"generated":{"line":72,"column":8},"source":"conditions.js","original":{"line":29,"column":8}},{"generated":{"line":72,"column":13},"source":"conditions.js","original":{"line":29,"column":13}},{"generated":{"line":72,"column":15},"source":"conditions.js","original":{"line":29,"column":15}},{"name":"color","generated":{"line":73,"column":0},"source":"conditions.js","original":{"line":29,"column":17}},{"name":"color","generated":{"line":73,"column":10},"source":"conditions.js","original":{"line":29,"column":17}},{"generated":{"line":73,"column":15},"source":"conditions.js","original":{"line":29,"column":22}},{"name":"color","generated":{"line":73,"column":17},"source":"conditions.js","original":{"line":29,"column":17}},{"generated":{"line":74,"column":0},"source":"conditions.js","original":{"line":29,"column":15}},{"generated":{"line":75,"column":0},"source":"conditions.js","original":{"line":29,"column":5}},{"generated":{"line":75,"column":17},"source":"conditions.js","original":{"line":27,"column":4}},{"generated":{"line":75,"column":18},"source":"conditions.js","original":{"line":26,"column":3}},{"generated":{"line":75,"column":20},"source":"conditions.js","original":{"line":31,"column":4}},{"generated":{"line":76,"column":0},"source":"conditions.js","original":{"line":31,"column":12}},{"generated":{"line":76,"column":8},"source":"conditions.js","original":{"line":31,"column":12}},{"generated":{"line":76,"column":15},"source":"conditions.js","original":{"line":31,"column":19}},{"generated":{"line":76,"column":17},"source":"conditions.js","original":{"line":31,"column":21}},{"name":"onClick","generated":{"line":76,"column":22},"source":"conditions.js","original":{"line":31,"column":26}},{"generated":{"line":77,"column":0},"source":"conditions.js","original":{"line":31,"column":4}},{"generated":{"line":77,"column":25},"source":"conditions.js","original":{"line":26,"column":3}},{"generated":{"line":77,"column":26},"source":"conditions.js","original":{"line":25,"column":2}},{"generated":{"line":78,"column":0},"source":"conditions.js","original":{"line":36,"column":2}},{"name":"React","generated":{"line":82,"column":2},"source":"conditions.js","original":{"line":8,"column":18}},{"generated":{"line":82,"column":7},"source":"conditions.js","original":{"line":8,"column":23}},{"name":"Component","generated":{"line":82,"column":8},"source":"conditions.js","original":{"line":8,"column":24}},{"name":"ReactDOM","generated":{"line":84,"column":0},"source":"conditions.js","original":{"line":39,"column":0}},{"generated":{"line":84,"column":8},"source":"conditions.js","original":{"line":39,"column":8}},{"name":"render","generated":{"line":84,"column":9},"source":"conditions.js","original":{"line":39,"column":9}},{"generated":{"line":84,"column":15},"source":"conditions.js","original":{"line":39,"column":0}},{"generated":{"line":84,"column":16},"source":"conditions.js","original":{"line":40,"column":1}},{"generated":{"line":84,"column":36},"source":"conditions.js","original":{"line":40,"column":2}},{"generated":{"line":84,"column":39},"source":"conditions.js","original":{"line":40,"column":1}},{"generated":{"line":84,"column":46},"source":"conditions.js","original":{"line":39,"column":0}},{"name":"document","generated":{"line":84,"column":48},"source":"conditions.js","original":{"line":41,"column":1}},{"generated":{"line":84,"column":56},"source":"conditions.js","original":{"line":41,"column":9}},{"name":"querySelector","generated":{"line":84,"column":57},"source":"conditions.js","original":{"line":41,"column":10}},{"generated":{"line":84,"column":70},"source":"conditions.js","original":{"line":41,"column":1}},{"generated":{"line":84,"column":71},"source":"conditions.js","original":{"line":41,"column":24}},{"generated":{"line":84,"column":86},"source":"conditions.js","original":{"line":41,"column":1}},{"generated":{"line":84,"column":87},"source":"conditions.js","original":{"line":39,"column":0}}],"sources":{"conditions.js":"import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\n\nconst Toggle = ({ condition, children }) => (\n\tcondition ? children[0] : children[1]\n);\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tcolor: 'blue'\n\t\t};\n\t\tthis.onClick = this.onClick.bind(this);\n\t}\n\n\tonClick() {\n\t\tthis.setState(({ color }) => ({\n\t\t\tcolor: (color === 'blue') ? 'lime' : 'blue'\n\t\t}));\n\t}\n\n\trender() {\n\t\tconst { color } = this.state;\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<Toggle condition={color ==='blue'}>\n\t\t\t\t\t<p style={{ color }}>Blue!</p>\n\t\t\t\t\t<p style={{ color }}>Lime!</p>\n\t\t\t\t</Toggle>\n\t\t\t\t<button onClick={this.onClick}>\n\t\t\t\t\tToggle Colors\n\t\t\t\t</button>\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nReactDOM.render(\n\t<App />,\n\tdocument.querySelector('[role=\"main\"]')\n);"},"lineCount":null}},"hash":"3400e9ef1984275aaa8568d3ac8dce03","cacheData":{"env":{}}}